openapi: 3.1.0
info:
  title: LLM PIC API Specification
  version: 0.1.0
servers:
  - url: http://localhost/api/v1
tags:
  - name: LLM
  - name: User
  - name: Session

paths:
  /tutorResponse:
    post:
      tags:
        - LLM
      operationId: tutorRespond
      description: Acquire a streaming response from LLM background.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LLMPropmt'
      responses:
        '200':
          description: Successful
          content:
            text/plain:
              schema:
                type: string
                format: binary
                maxLength: 2048
        '400':
          description: Failed
        '429':
          description: Rate-limited

  /session:
    post:
      tags:
          - Session
      security: []
      operationId: sessionLogin
      description: Authenticate and create a new session.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Successful, returning a new access token assigned to the session.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  token:
                    type: string
        '400':
          description: Failed
    delete:
      tags:
        - Session
      operationId: sessionLogout
      description: Logout and destroy the session.
      responses:
        '200':
          description: Successful

  /user:
    post:
      tags:
        - User
      security: []
      operationId: userCreate
      description: Create a new user.
      requestBody:
        required: true
        description: Requested user.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Successful
        '400':
          description: Failed
        '429':
          description: Rate-limited

  /courses:
    get:
      tags:
        - Courses
      security: []
      operationId: enumerateCourses
      description: Get all available courses.
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  courses:
                    type: array
                    items:
                      $ref: '#/components/schemas/Course'
  
  /classes:
    get:
      tags:
        - Courses
      security: []
      operationId: enumerateClasses
      description: Get all available classes of a given course.
      parameters:
        - in: query
          name: id
          schema:
            type: integer
          required: true
          description: The ID of the course to be queried.
      responses:
        '200':
          description: Successful.
          content:
            application/json:
              schema:
                type: object
                properties:
                  classes:
                    type: array
                    items:
                      $ref: '#/components/schemas/Class'
        '400':
          description: Bad request.
        '404':
          description: Not found.
  
  /classContent:
    get:
      tags:
        - Courses
      security: []
      operationId: getClassContent
      description: Get the content of a given class.
      parameters:
        - in: query
          name: classId
          schema:
            type: integer
          required: true
          description: The ID of the class to be queried.
        - in: query
          name: courseId
          schema:
            type: integer
          required: true
          description: The ID of the course to be queried.
      responses:
        '200':
          description: Successful.
          content:
            text/html:
              schema:
                type: string
                description: Raw HTML of the content of the class. (Maybe XSS susceptible)
        '400':
          description: Bad request.
        '404':
          description: Not found.


components:
  schemas:
    LoginRequest:
      type: object
      required:
        - id
        - password
      properties:
        id:
          type: string
        password:
          type: string
    User:
      type: object
      required:
        - id
        - email
        - userName
        - password
      properties:
        id:
          type: integer
          format: int64
          example: 0
        email:
          type: string
          example: "example@example"
        userName:
          type: string
          example: "User"
        password:
          type: string
          format: password
        status:
          type: integer
    LLMPropmt:
      type: object
      properties:
        code:
          type: string
        prompt:
          type: string
    Class:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
        name:
          type: string
    Course:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          description: 'An identifier of the course. Note that it is also used to access the course.'
        name:
          type: string
        description:
          type: string
        thumbnail:
          type: string

  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: query
      name: token

security:
  - ApiKeyAuth: []
